{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  function stringifyNode(node, custom) {\n    var type = node.type;\n    var value = node.value;\n    var buf;\n    var customResult;\n\n    if (custom && (customResult = custom(node)) !== undefined) {\n      return customResult;\n    } else if (type === \"word\" || type === \"space\") {\n      return value;\n    } else if (type === \"string\") {\n      buf = node.quote || \"\";\n      return buf + value + (node.unclosed ? \"\" : buf);\n    } else if (type === \"comment\") {\n      return \"/*\" + value + (node.unclosed ? \"\" : \"*/\");\n    } else if (type === \"div\") {\n      return (node.before || \"\") + value + (node.after || \"\");\n    } else if (Array.isArray(node.nodes)) {\n      buf = stringify(node.nodes);\n\n      if (type !== \"function\") {\n        return buf;\n      }\n\n      return value + \"(\" + (node.before || \"\") + buf + (node.after || \"\") + (node.unclosed ? \"\" : \")\");\n    }\n\n    return value;\n  }\n\n  function stringify(nodes, custom) {\n    var result, i;\n\n    if (Array.isArray(nodes)) {\n      result = \"\";\n\n      for (i = nodes.length - 1; ~i; i -= 1) {\n        result = stringifyNode(nodes[i], custom) + result;\n      }\n\n      return result;\n    }\n\n    return stringifyNode(nodes, custom);\n  }\n\n  module.exports = stringify;\n});","map":[[2,0,1,0],[2,11,1,9,"stringifyNode"],[2,24,1,0],[2,25,1,23,"node"],[2,29,1,0],[2,31,1,29,"custom"],[2,37,1,0],[2,39,1,37],[3,0,2,2],[3,8,2,6,"type"],[3,12,2,10],[3,15,2,13,"node"],[3,19,2,17],[3,20,2,18,"type"],[3,24,2,2],[4,0,3,2],[4,8,3,6,"value"],[4,13,3,11],[4,16,3,14,"node"],[4,20,3,18],[4,21,3,19,"value"],[4,26,3,2],[5,0,4,2],[5,8,4,6,"buf"],[5,11,4,2],[6,0,5,2],[6,8,5,6,"customResult"],[6,20,5,2],[8,0,7,2],[8,8,7,6,"custom"],[8,14,7,12],[8,18,7,16],[8,19,7,17,"customResult"],[8,31,7,29],[8,34,7,32,"custom"],[8,40,7,38],[8,41,7,39,"node"],[8,45,7,38],[8,46,7,16],[8,52,7,50,"undefined"],[8,61,7,2],[8,63,7,61],[9,0,8,4],[9,13,8,11,"customResult"],[9,25,8,4],[10,0,9,3],[10,5,7,2],[10,11,9,9],[10,15,9,13,"type"],[10,19,9,17],[10,24,9,22],[10,30,9,13],[10,34,9,32,"type"],[10,38,9,36],[10,43,9,41],[10,50,9,9],[10,52,9,50],[11,0,10,4],[11,13,10,11,"value"],[11,18,10,4],[12,0,11,3],[12,5,9,9],[12,11,11,9],[12,15,11,13,"type"],[12,19,11,17],[12,24,11,22],[12,32,11,9],[12,34,11,32],[13,0,12,4,"buf"],[13,6,12,4,"buf"],[13,9,12,7],[13,12,12,10,"node"],[13,16,12,14],[13,17,12,15,"quote"],[13,22,12,10],[13,26,12,24],[13,28,12,4],[14,0,13,4],[14,13,13,11,"buf"],[14,16,13,14],[14,19,13,17,"value"],[14,24,13,11],[14,28,13,26,"node"],[14,32,13,30],[14,33,13,31,"unclosed"],[14,41,13,26],[14,44,13,42],[14,46,13,26],[14,49,13,47,"buf"],[14,52,13,11],[14,53,13,4],[15,0,14,3],[15,5,11,9],[15,11,14,9],[15,15,14,13,"type"],[15,19,14,17],[15,24,14,22],[15,33,14,9],[15,35,14,33],[16,0,15,4],[16,13,15,11],[16,20,15,18,"value"],[16,25,15,11],[16,29,15,27,"node"],[16,33,15,31],[16,34,15,32,"unclosed"],[16,42,15,27],[16,45,15,43],[16,47,15,27],[16,50,15,48],[16,54,15,11],[16,55,15,4],[17,0,16,3],[17,5,14,9],[17,11,16,9],[17,15,16,13,"type"],[17,19,16,17],[17,24,16,22],[17,29,16,9],[17,31,16,29],[18,0,17,4],[18,13,17,11],[18,14,17,12,"node"],[18,18,17,16],[18,19,17,17,"before"],[18,25,17,12],[18,29,17,27],[18,31,17,11],[18,35,17,33,"value"],[18,40,17,11],[18,44,17,42,"node"],[18,48,17,46],[18,49,17,47,"after"],[18,54,17,42],[18,58,17,56],[18,60,17,11],[18,61,17,4],[19,0,18,3],[19,5,16,9],[19,11,18,9],[19,15,18,13,"Array"],[19,20,18,18],[19,21,18,19,"isArray"],[19,28,18,13],[19,29,18,27,"node"],[19,33,18,31],[19,34,18,32,"nodes"],[19,39,18,13],[19,40,18,9],[19,42,18,40],[20,0,19,4,"buf"],[20,6,19,4,"buf"],[20,9,19,7],[20,12,19,10,"stringify"],[20,21,19,19],[20,22,19,20,"node"],[20,26,19,24],[20,27,19,25,"nodes"],[20,32,19,19],[20,33,19,4],[22,0,20,4],[22,10,20,8,"type"],[22,14,20,12],[22,19,20,17],[22,29,20,4],[22,31,20,29],[23,0,21,6],[23,15,21,13,"buf"],[23,18,21,6],[24,0,22,5],[26,0,23,4],[26,13,24,6,"value"],[26,18,24,11],[26,21,25,6],[26,24,24,6],[26,28,26,7,"node"],[26,32,26,11],[26,33,26,12,"before"],[26,39,26,7],[26,43,26,22],[26,45,24,6],[26,49,27,6,"buf"],[26,52,24,6],[26,56,28,7,"node"],[26,60,28,11],[26,61,28,12,"after"],[26,66,28,7],[26,70,28,21],[26,72,24,6],[26,77,29,7,"node"],[26,81,29,11],[26,82,29,12,"unclosed"],[26,90,29,7],[26,93,29,23],[26,95,29,7],[26,98,29,28],[26,101,24,6],[26,102,23,4],[27,0,31,3],[29,0,32,2],[29,11,32,9,"value"],[29,16,32,2],[30,0,33,1],[32,0,35,0],[32,11,35,9,"stringify"],[32,20,35,0],[32,21,35,19,"nodes"],[32,26,35,0],[32,28,35,26,"custom"],[32,34,35,0],[32,36,35,34],[33,0,36,2],[33,8,36,6,"result"],[33,14,36,2],[33,16,36,14,"i"],[33,17,36,2],[35,0,38,2],[35,8,38,6,"Array"],[35,13,38,11],[35,14,38,12,"isArray"],[35,21,38,6],[35,22,38,20,"nodes"],[35,27,38,6],[35,28,38,2],[35,30,38,28],[36,0,39,4,"result"],[36,6,39,4,"result"],[36,12,39,10],[36,15,39,13],[36,17,39,4],[38,0,40,4],[38,11,40,9,"i"],[38,12,40,10],[38,15,40,13,"nodes"],[38,20,40,18],[38,21,40,19,"length"],[38,27,40,13],[38,30,40,28],[38,31,40,4],[38,33,40,31],[38,34,40,32,"i"],[38,35,40,4],[38,37,40,35,"i"],[38,38,40,36],[38,42,40,40],[38,43,40,4],[38,45,40,43],[39,0,41,6,"result"],[39,8,41,6,"result"],[39,14,41,12],[39,17,41,15,"stringifyNode"],[39,30,41,28],[39,31,41,29,"nodes"],[39,36,41,34],[39,37,41,35,"i"],[39,38,41,34],[39,39,41,28],[39,41,41,39,"custom"],[39,47,41,28],[39,48,41,15],[39,51,41,49,"result"],[39,57,41,6],[40,0,42,5],[42,0,43,4],[42,13,43,11,"result"],[42,19,43,4],[43,0,44,3],[45,0,45,2],[45,11,45,9,"stringifyNode"],[45,24,45,22],[45,25,45,23,"nodes"],[45,30,45,22],[45,32,45,30,"custom"],[45,38,45,22],[45,39,45,2],[46,0,46,1],[48,0,48,0,"module"],[48,2,48,0,"module"],[48,8,48,6],[48,9,48,7,"exports"],[48,16,48,0],[48,19,48,17,"stringify"],[48,28,48,0]]},"type":"js/module"}]}